name: Build and Deploy to Azure Container Apps

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: vibesregistryprods
  CONTAINER_NAME: vibes-backend
  RESOURCE_GROUP: vibesCognizant
  CONTAINER_APP_NAME: vibes-backend-prod
  CONTAINER_APP_ENVIRONMENT: vibes-env-prod

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.image-tag.outputs.tag }}
    steps:
    - name: Checkout to the branch
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io
        username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
        password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

    - name: Generate image tag
      id: image-tag
      run: |
        echo "tag=${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}" >> $GITHUB_OUTPUT

    - name: Build and push container image to registry
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: true
        tags: |
          ${{ steps.image-tag.outputs.tag }}
          ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:latest
        file: ./backend/Dockerfile
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout to the branch
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Azure Container Apps
      run: |
        echo "Image tag from build job: ${{ needs.build.outputs.image-tag }}"
        echo "Container app name: ${{ env.CONTAINER_APP_NAME }}"
        echo "Resource group: ${{ env.RESOURCE_GROUP }}"
        
        IMAGE_TAG="${{ needs.build.outputs.image-tag }}"
        if [ -z "$IMAGE_TAG" ]; then
          echo "ERROR: Image tag is empty!"
          exit 1
        fi
        
        az containerapp update \
          --name "${{ env.CONTAINER_APP_NAME }}" \
          --resource-group "${{ env.RESOURCE_GROUP }}" \
          --image "$IMAGE_TAG" \
          --target-port 5000 